@import "../../styles//variables.scss";

$transition: 0.2s ease-in-out;

.button {
  --icon-color: var(--text-color);

  width: fit-content;

  display: block;
  padding: 0 0.5rem;

  position: relative;

  border-radius: var(--radius-medium);
  border: 1px solid;
  outline: 0.1875rem solid transparent;

  user-select: none;

  cursor: pointer;
  overflow: hidden;
  transition: $transition;
  transition-property: filter, color, background-color, border-color, outline;

  &:disabled {
    cursor: not-allowed;
  }

  &:not(:disabled):hover {
    filter: brightness(1.05);
  }

  &:not(:disabled):active {
    filter: brightness(0.9);
  }

  > * {
    pointer-events: none;
  }
}

.fullWidth {
  width: 100%;
}

.primary {
  border-color: var(--primary-1);
  background-color: var(--primary-1);
  color: var(--text-color, var(--gray-white));

  &:disabled:not(.processing) {
    border-color: var(--primary-3);
    background-color: var(--primary-3);
    color: var(--gray-white);
  }

  &:focus {
    outline: 0.1875rem solid rgba($primary-1, 0.33);
  }
}

.secondary {
  border-color: var(--border-primary);
  background-color: var(--bg-white);
  color: var(--text-color, var(--text-secondary));

  &:disabled:not(.processing) {
    border-color: var(--border-disabled);
    background-color: var(--bg-white);
    color: var(--text-disabled);
  }

  &:focus {
    outline: 0.1875rem solid rgba($border-primary, 0.33);
  }
}

.tertiary {
  border-color: var(--border-primary);
  background-color: var(--border-primary);
  color: var(--text-color, var(--text-secondary));

  &:disabled:not(.processing) {
    border-color: var(--border-disabled);
    background-color: var(--border-disabled);
    color: var(--text-disabled);
  }

  &:focus {
    outline: 0.1875rem solid rgba($border-primary, 0.33);
  }
}

.danger {
  border-color: var(--status-red-1);
  background-color: var(--status-red-1);
  color: var(--text-color, var(--gray-white));

  &:disabled:not(.processing) {
    border-color: var(--status-red-3);
    background-color: var(--status-red-3);
    color: var(--gray-white);
  }

  &:focus {
    outline: 0.1875rem solid rgba($status-red-1, 0.33);
  }
}

.small {
  min-width: 4.625rem;
  height: var(--height-small);
  font-size: var(--text-small);
}

.medium {
  min-width: 5.625rem;
  height: var(--height-medium);
  font-size: var(--text-medium);
}

.large {
  min-width: 6.875rem;
  height: var(--height-large);
  font-size: var(--text-large);
}

@mixin padeIn {
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  animation: fadeIn $transition forwards;
}

@mixin fadeOut {
  @keyframes fadeOut {
    0% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }

  animation: fadeOut $transition forwards;
}

.content {
  display: flex;
  justify-content: center;
  align-items: center;
  @include padeIn;

  .processing & {
    @include fadeOut;
  }
}

.processingAnimation {
  position: absolute;
  inset: 0;
  @include padeIn;

  .button:not(.processing) & {
    @include fadeOut;
  }

  &::after {
    width: 1.5rem;
    height: 1.5rem;

    content: "";
    box-sizing: border-box;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    border-radius: 50%;
    border: 0.25rem solid;

    .button.primary & {
      border-color: rgba($border-white, 0.5);
      border-right-color: rgba($border-white, 0.25);
      border-bottom-color: rgba($border-white, 0.25);
    }

    .button.secondary & {
      border-color: rgba($border-black, 0.25);
      border-right-color: rgba($border-black, 0.125);
      border-bottom-color: rgba($border-black, 0.125);
    }

    .button.tertiary & {
      border-color: rgba($border-white, 1);
      border-right-color: rgba($border-white, 0.5);
      border-bottom-color: rgba($border-white, 0.5);
    }

    .button.danger & {
      border-color: rgba($border-white, 0.5);
      border-right-color: rgba($border-white, 0.25);
      border-bottom-color: rgba($border-white, 0.25);
    }

    @keyframes spin {
      0% {
        transform: translate(-50%, -50%) rotate(45deg);
      }

      100% {
        transform: translate(-50%, -50%) rotate(405deg);
      }
    }

    animation: spin 1s ease-in-out infinite;
  }
}
